####### Compiler, tools and options
CXX             = g++
CPPFLAGS        = -pipe -Wall -Werror -pthread -g -D_REENTRANT
INCPATH         = .
LIBS            = 
EXECUTABLE      = 
RM              = rm -rf
SRCS            = $(wildcard *.cc)
OBJS            = $(patsubst %.cc, %.o, $(SRCS))
DEPS            = $(patsubst %.o, %.d, $(OBJS))
CPPFLAGS        += -MMD $(addprefix -I, $(INCPATH))
MISSING_DEPS 	= $(filter-out $(wildcard $(DEPS)),$(DEPS))
MISSING_DEPS_SRCS = $(wildcard $(patsubst %.d, %.cc, $(MISSING_DEPS)))

.PHONY : everything deps objs clean veryclean rebuild

everything : $(EXECUTABLE)
    
deps : $(DEPS)
    
objs : $(OBJS)
    
clean :
	@$(RM) $(OBJS)
	@$(RM) $(DEPS)
    
veryclean: clean
	@$(RM) $(EXECUTABLE)
    
rebuild: veryclean everything
    
ifneq ($(MISSING_DEPS),)
$(MISSING_DEPS):
	@$(RM) $(patsubst %.d, %.o, $@)
endif
    
-include $(DEPS)

$(EXECUTABLE) : $(OBJS)
	$(CXX) -o $(EXECUTABLE) $(OBJS) $(addprefix -l, $(LIBS))

#######################################################################

OBJ_DIR=
BIN_DIR=
GCOV_DIR=

UT_SRC=$(wildcard %_test.cpp)
MAIN_SRC=$(wildcard %_main.cpp)
SRC=$(filter-out $(UT_SRC), $(wildcard %.cpp))
LIB_SRC=$(filter-out $(MAIN_SRC), $(SRC))

UT_OBJ=$(patsubst %.cpp, $(OBJ_DIR)/%.o, $(UT_SRC))
OBJ=$(patsubst %.cpp, %.o, $(SRC))
LIB_OBJ=$(patsubst %.cpp, %.o, $(LIB_SRC))

BIN=$(patsubst %_main.cpp, %, $(MAIN_SRC))
LIB=$(patsubst %_main.cpp, lib%.a, $(MAIN_SRC))
UT=$(patsubst %_test.cpp, %, $(UT_SRC))

TARGET=$(LIB) $(BIN) $(UT)

%.o: %.cpp
	$(CC) $(CCFLAGS) $(INCLUDES) -c $< -o $@

ebsblocknode: $(OBJ)	
	$(CXX) -o $@ $^ $(CXXFLAGS) $(INCLUDES) $(LIBS)

libebsblocknode.a: $(LIB_OBJ)
	ar cr $@ $^

clean:
	rm -rf $(TARGET) $(RMFILE)


WORK_PATH=../../
INCLUDES=-I./ -I$(GTEST_INCLUDE)  -I$(COMMON_PATH) -I$(WORK_PATH)/blocknode -I$(WORK_PATH)/master -I$(IDL_PATH) \
	-I$(THRIFT_INCLUDE) -I$(ZOOKEEPER_INCLUDE)

LIBS= -L$(WORK_PATH)/blocknode -lebsblocknode -L$(COMMON_PATH) -lebscommon -L$(IDL_PATH) -lebsidl  -L$(GTEST_LIB) \
	-L$(THRIFT_LIB) -L$(ZOOKEEPER_LIB) -L$(LOG4CXX_LIB) -lpthread -lcrypto -lthriftnb -levent -luuid $(-LGCOV_LIB) 

SRC=$(wildcard *UT.cpp)
OBJECTS=$(patsubst %.cpp, %.o, $(SRC))
TARGET=$(patsubst %UT.cpp, blocknode_%_unittest, $(SRC))

all: $(TARGET)

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -g -D PRIVATETEST $(INCLUDES) -c $< -o $@

$(TARGET): blocknode_%_unittest: %UT.o  $(WORK_PATH)/blocknode/libebsblocknode.a
	$(CXX) -g -o $@ $< $(LIBS)

clean:
	@echo clean immediate files...
	rm -f $(TARGET) *.o *.gcno *.gcda

